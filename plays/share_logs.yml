---

- name: "Sharing debug logs"
  become: no
  hosts: buildserver
  gather_facts: false
      
  tasks:
    
    - name: gather needed facts
      ansible.builtin.setup:

    - include_role:
        name: common
        tasks_from: justvault.yml
        public: yes

    - name: grab configured ansible log path
      connection: local
      shell: >-
        grep -E '^log_path\s+=' "{{ ansible_config_file }}" | cut -d '=' -f 2
      register: ansiblecfg
        
    - name: paste ansible log
      connection: local
      shell: >-
        HOME="{{ gist_home_dir | d(BUILDHOME) }}" gist-paste --private  -d "ANSIBLE LOG - ID {{ log_build_id }} - {{ ansible_facts['date_time']['iso8601'] }}" -f ansible.log.{{ ansible_facts['date_time']['iso8601'] }}.yaml  {{ ansiblecfg.stdout }}.{{ log_build_id }}
      register: paste_ansible
      when: skip_fetch_ansible_log is undefined or not skip_fetch_ansible_log

    - stat:
        path: "/tmp/{{ inventory_hostname }}/build_{{ target_model }}_{{ android_shortversion }}_{{ ROM_FLAVOR }}.log.{{ log_build_id }}"
      register: buildlogfile
      connection: local
      no_log: true
      when: skip_fetch_build_log is undefined or not skip_fetch_build_log

    - name: paste build log
      connection: local
      shell: |
        if [ -f "/tmp/{{ inventory_hostname }}/build_{{ target_model }}_{{ android_shortversion }}_{{ ROM_FLAVOR }}_{{ log_build_id }}.log" ];then
          HOME="{{ gist_home_dir | d(BUILDHOME) }}" gist-paste --private  -d "BUILD LOG - ID {{ log_build_id }} - {{ ansible_facts['date_time']['iso8601'] }}" -f build.log.{{ ansible_facts['date_time']['iso8601'] }}.sh /tmp/{{ inventory_hostname }}/build_{{ target_model }}_{{ android_shortversion }}_{{ ROM_FLAVOR }}.log.{{ log_build_id }}
        else
          true
        fi
      register: paste_build
      when:
        - buildlogfile.stat.isreg is defined
        - skip_fetch_build_log is undefined or not skip_fetch_build_log

    - name: "Print generated links"
      connection: local
      debug:
        msg: |
          Please share the following links:
          
          - ansible: {{ paste_ansible.stdout | d('empty') }}
          - build: {{ paste_build.stdout | d('empty') }}
    
    - name: "Telegram notify"
      connection: local
      community.general.telegram:
        token: "{{ vault_tg_token }}"
        api_args:
          chat_id: "{{ vault_tg_group_id_failing }}"
          parse_mode: "MarkdownV2"
          text: |
            Debug logs uploaded:
          
            \- ansible: [log]({{ paste_ansible.stdout | d('empty') }})
            \- build: [log]({{ paste_build.stdout | d('empty') }})
          disable_web_page_preview: True
      when: telegram_notifications | bool
