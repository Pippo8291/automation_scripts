---

- name: "Release OS"
  block:

    - name: "Release OS for {{ BDEVICE }}"
      shell: "scp {{ JKZIPDIR }}/{{ item }} {{ groups.downloadserver[0] }}:{{ rempath }}"
      delegate_to: "{{ groups.buildserver[0] }}"
      loop:
        - "{{ ROMFILE.stdout }}"
        - "{{ ROMFILE.stdout }}.sha*sum"

    - name: "Correct ZIP timestamp for {{ BDEVICE }} to fix recurring OTA offering"
      file:
        path: "{{ rempath }}/{{ ROMFILE.stdout }}"
        modification_time: "{{ '%Y%m%d%H%M.%S' | strftime(build_date_utc.stdout) }}"
        access_time: "{{ '%Y%m%d%H%M.%S' | strftime(build_date_utc.stdout) }}"
        state: touch
      delegate_to: "{{ groups.downloadserver[0] }}"
  
  when:
    - ROM_FLAVOR != "TWRP"
    - ROM_FLAVOR != "SHRP"
    - ROM_FLAVOR != "MAID"
    - axp_build_recovery_only is undefined or (axp_build_recovery_only is defined and not axp_build_recovery_only)

- name: "Release RECOVERY for {{ BDEVICE }}"
  shell: "scp {{ JKZIPDIR }}/{{ item }} {{ groups.downloadserver[0] }}:{{ rempath }}"
  delegate_to: "{{ groups.buildserver[0] }}"
  loop:
    - "{{ ROMFILE.stdout }}"
    - "{{ ROMFILE.stdout }}.sha256sum"
  when:
    - ROM_FLAVOR == "TWRP" or ROM_FLAVOR == "SHRP" or (axp_build_recovery_only is defined and axp_build_recovery_only)

- name: "Release AXP.OS recovery"
  block:

    - name: "Prep AXP.OS recovery vars"
      ansible.builtin.set_fact:
          axp_fastboot_zip: "{{ axp_finalzip_dir }}/fastboot/{{ ROMFILE.stdout | regex_replace('.zip', '-fastboot.zip') }}"
          axp_recovery_name: "{{ axp_finalzip_dir }}/{{ ROMFILE.stdout | regex_replace('-dos-', '-RECOVERY-') | regex_replace('.zip', '.img') }}"
          
    - name: "Release AXP.OS RECOVERY for {{ BDEVICE }}"
      shell: |
          unzip -p {{ axp_fastboot_zip }} recovery.img > {{ axp_recovery_name }} || \
              unzip -p {{ axp_fastboot_zip }} boot.img > {{ axp_recovery_name }}
          sha256sum {{ axp_recovery_name }} > {{ axp_recovery_name }}.sha256
          scp "{{ axp_recovery_name }}*" {{ groups.downloadserver[0] }}:{{ rempath }}/recovery/
      delegate_to: "{{ groups.buildserver[0] }}"

  when:
    - ROM_FLAVOR == "axp"
    - axp_release_recovery | d(False)
    - not axp_build_recovery_only | d(False)
