---

- name: "Get local manifests (if set)"
  git:
    repo: "{{ git_repo_local_manifests }}"
    dest: "{{ SRCPATH }}/.repo/local_manifests"
    version: "{{ git_repo_local_manifests_branch }}"
    force: true
  timeout: 180
  when: git_repo_local_manifests is defined

- name: "Init Android sources"
  shell: "{{ repo_bin }} init -u {{ git_repo_main_manifests }} -b {{ git_repo_main_branch | d(REPOBRANCH) }} >> {{ BUILD_LOG }}"
  args:
    chdir: "{{ SRCPATH }}"

- name: "Sync"
  shell: >
      {{ repo_bin }} sync --jobs-checkout={{ max_processes }} --jobs-network={{ max_processes_sync }} {{ repo_sync_args }} 2>> {{ BUILD_LOG }}\
        || {{ repo_bin }} sync --jobs-checkout={{ max_processes }} --jobs-network={{ max_processes_sync }} {{ repo_sync_args }} --fail-fast 
  args:
    chdir: "{{ SRCPATH }}"
  no_log: "{{ debug_off | d(true) }}"

# git lfs can be a pita! i.e. it silently fails and you have no idea where.
# the following ensures we can catch known issues or print the error path at least
- name: "Sync LFS"
  shell: >
      {{ repo_bin }} forall -j{{ max_processes_sync }} -c 'git lfs pull || pwd | grep -E "OpenCL-CTS" ' >> {{ BUILD_LOG }}
  args:
    executable: /bin/bash
    chdir: "{{ SRCPATH }}"
  when: ROM_FLAVOR != 'MAID'
  # or (sync_lfs is defined and sync_lfs == 'true')
  no_log: "{{ debug_off | d(true) }}"
