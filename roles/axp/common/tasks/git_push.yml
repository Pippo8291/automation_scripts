---

- name: "Push any detected change"
  shell: |
    export LC_ALL=C
    {{ DOS_INIT }}
    
    TAG=$(date +%F)"_$BDEVICE"
    REPRMANIFEST=".repo/local_manifests/axp_cicd.xml.repr"
    
    # starting new manifest
    echo -e '<?xml version="1.0" encoding="UTF-8"?>\n<manifest>\n\t<!-- auto-created build manifest -->\n' > ${REPRMANIFEST}
    
    # check where we changed origin
    for repo in $(repo list | tr -d ' ');do
      croot
      reponame_orig=$(echo "$repo" | cut -d ':' -f2)
      reponame=$(echo "$repo" | cut -d ':' -f2 | sed 's#LineageOS/##g;s#/#_#g')
      localpath=$(echo "$repo" | cut -d ':' -f1)

      #if [[ $(echo "$localpath" | grep -q 'kernel/') ]];then
      #  grep '^CONFIG_LOCALVERSION=' "$localpath"
      #  ="-dos.p217"
      #  DOSVER=$(grep editKernelLocalversion {{ DOSPATH }}/Scripts/LineageOS-${ los_version }}/CVE_Patchers/$matrix.version.patcher  matrix.version.name .sh | cut -d '"' -f2)
      #  TAG="${TAG}${DOSVER}"
      # fi
    
      cd $localpath

      # check and add new repo if needed only
      CURHASH=$(git log -1 --format=oneline | cut -d ' ' -f1)
      REMHASH=$(repo info . | grep -i "Current revision" | tr -d ' ' | cut -d ':' -f2)
      
      if [ "$CURHASH" != "$REMHASH" ]; then
        echo -e "\nWARNING: changes detected in $localpath ($reponame) which needs to be pushed!\n" >> {{ BUILD_LOG }}
      else
        echo "no changes in $localpath, skipping" >> {{ BUILD_LOG }}
        continue
      fi
      
      # create repo if non-existent
      # using a workaround as github cli does not allow to set permission on create
      # see: https://github.com/cli/cli/issues/2241#issuecomment-1402316546
      # requires to auth via gh first: $> gh auth login
      git remote remove up 2>> /dev/null || true
      
      if $(git ls-remote git@github.com:AXP-OS/${reponame}.git >> /dev/null 2>&1);then
        git remote add up git@github.com/AXP-OS/${reponame}.git
      else
        git ls-remote git@github.com:AXP-OS/${reponame}.git 2>&1 >> /dev/null \
          || (gh repo create AXP-OS/${reponame} --public --source=. --remote=up --disable-issues --disable-wiki --team bots --description "forked from: $(git remote -v | head -n1 | cut -f2 | cut -d ' ' -f1)" \
              && gh api -X PUT "/orgs/AXP-OS/teams/bots/repos/AXP-OS/${reponame}" -f 'permission=maintain')
      fi
      
      # push origin sources first
      git push -u up HEAD:refs/heads/axp

      # tag the current patched state and push accordingly
      git tag -a "$TAG" -m "axp.os: tagged on $TAG" || (git tag -d "$TAG"; git push up --delete "$TAG" || true ; git tag -a "$TAG" -m "axp.os: tagged on $TAG")
      git tag latest || (git tag -d latest; git push up --delete latest; git tag latest)      
      git push --set-upstream up $TAG latest

      # add to manifest
      croot
      echo -e '\n\t<remove-project name="'$reponame_orig'" />' >> ${REPRMANIFEST}
      echo -e '\t<project path="'$localpath'" name="'$reponame'" remote="axp.os" revision="refs/tags/'$TAG'" />' >> ${REPRMANIFEST}

      echo "exiting here to check...!" && exit 4444
      
    done
    # closing new manifest
    echo -e '\n</manifest>' >> ${REPRMANIFEST}

    # push manifest
    cd .repo/local_manifests/
    # (re-)create remote
    git remote remove up || true
    git remote add up git@github.com/AXP-OS/manifest.git
    git add axp_cicd.xml && git commit --author="${AXP_GIT_AUTHOR} <${AXP_GIT_MAIL}>" -m "added/changed $TAG"
    git tag -a "$TAG" -m "axp.os: tagged on $TAG" || (git tag -d "$TAG"; git push up --delete "$TAG" || true ; git tag -a "$TAG" -m "axp.os: tagged on $TAG")
    #git tag latest || (git tag -d latest; git push up --delete latest; git tag latest)
    git push --set-upstream up $TAG
    # latest
  args:
    executable: /bin/bash
    chdir: "{{ SRCPATH }}"
    
