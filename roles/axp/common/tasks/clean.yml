---

- block:

   - name: "hard reset DOS"
     shell: |
       export HOME="{{ BUILDHOME }}"
       echo "BEFORE reset:" >> {{ BUILD_LOG }}
       git log -1 >> {{ BUILD_LOG }} 2>&1
       git status >> {{ BUILD_LOG }} 2>&1
       if [ $? -eq 128 ];then
         true
       else
         git am --abort >> {{ BUILD_LOG }} 2>&1
         git rebase --abort >> {{ BUILD_LOG }} 2>&1
         git reset --hard >> {{ BUILD_LOG }} 2>&1
         git add -A . && git stash save befreset-$(date +%F_%T) >> {{ BUILD_LOG }} 2>&1
       fi
       git submodule status >> {{ BUILD_LOG }} 2>&1
       git submodule update >> {{ BUILD_LOG }} 2>&1
     args:
       chdir: "{{ DOSPATH }}"
       executable: /bin/bash
       
   - name: "DOS State"
     shell: |
        echo "AFTER reset + sync:" >> {{ BUILD_LOG }}
        git log -1 >> {{ BUILD_LOG }} 2>&1
        git status >> {{ BUILD_LOG }} 2>&1
     args:
       chdir: "{{ DOSPATH }}"

  when: (override_reset_git == "undef" and reset_git == "true") or (override_reset_git == "true") or (override_sync == "true")

- name: Prepare DOS build
  file:
    path: "{{ item }}"
    state: directory
  loop:
    - "{{ SRCPATH }}"
    
- include_tasks: ../../../common/tasks/clean.yml
  #vars:
  #  override_reset_git: 'true'
 
- name: "Specific DOS -basic- cleanup"
  file:
    path: "{{ item }}"
    state: absent
  loop:
    - "{{ SRCPATH }}/out/target/product/{{ target_model }}/rec_tmp"

- name: "Specific paths -full- cleanup"
  file:
    path: "{{ item }}"
    state: absent
  loop: "{{ axp_clean_paths }}"
  when: 
     - (override_reset_git == "undef" and reset_git == "true") or (override_reset_git == "true") or (override_sync == "true")

- name: "Specific AXP.OS -full- cleanup"
  shell: |
     if [ -d "{{ item.path }}" ];then find {{ item.path }} {{ item.extra | d('') }} -name {{ item.file }} -delete -print; fi
  args:
    chdir: "{{ SRCPATH }}"
  loop:
    - { path: "vendor/axp", file: "EXTENDROM_PATCHER_DONE" }
    - { path: "vendor/extendrom", file: "EXTENDROM_PATCHER_DONE" }
    - { path: "./", file: ".wg.patched", extra: "-maxdepth 1" }
  when:
     - (override_reset_git == "undef" and reset_git == "true") or (override_reset_git == "true") or (override_sync == "true")
