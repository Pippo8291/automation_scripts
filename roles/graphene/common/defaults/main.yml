---

# manifests
git_repo_local_manifests: "ssh://gitea@code.binbash.rocks:22227/secureOS/local_manifests.git"
git_repo_main_manifests: "https://github.com/GrapheneOS/platform_manifest.git"

# key dir in sources dir
SRC_KEYSDIR: keys

ROM_VERSION: "{{ semaphore_vars.task_details.target_version }}"
# GOS_KERNEL_BRANCH:
# ROM_NAME:
# ROM_BL_TYPE:
# lunch_buildtype:

# notification vars
ota_hint: |-
  ***OTA Update:*** supported
device_cl: |-
  ***{{ target_model_full }}*** ***\({{ target_model | replace("-","\-") | replace("_","\_") }}\)*** \- ***{{ ROM_FLAVOR | replace("-","\-") }} {{ android_shortversion | replace("-","\-") | replace(".","\.") }}***
rom_cl: |-
  ***Changes:***
  \- GrapheneOS: [Changelog](https://grapheneos.org/releases)
kernel_cl: |-
  \- kernel: [commits](https://github.com/GrapheneOS/kernel_common_5.10/commits/12.1)
dtree_cl: |-
  \- device tree: [commits](https://TBD/)
cdtree_cl: |-
  \- common tree: [commits](https://TBD/)
dl_links: |-
  ***Download:*** TBD

# [{{ ROMFILE.stdout | replace("-","\-") | replace("_","\_") | replace(".","\.") }} ]({{ leech_server }}/{{ ROM_FLAVOR }}/{{ android_shortversion }}/{{ target_model }})

# common snippets for templates

SH_GRAPHENE_GPG: |
       # list of keyservers for importing gpg pub keys
       # space separated
       GPG_KEYSERVER="keyserver.ubuntu.com keys.openpgp.org pgp.mit.edu"

       # gpg keys to import space separated
       # stinger:  65EEFE022108E2B708CBFCF7F9E712E59AF5F22A
       GPG_KEYS="65EEFE022108E2B708CBFCF7F9E712E59AF5F22A"

       F_GET_GPG_KEYS(){
           # import all required gpg pub keys
           for k in $GPG_KEYS;do
              if [ $GPG_FORCE_DL -eq 0 ];then
                  gpg -k $k >> /dev/null 2>&1 && echo "[$FUNCNAME] ... skipping already imported gpg pub key ($k)" && continue
              fi
              for s in $GPG_KEYSERVER;do
                  echo "- trying $k from $s"
                  gpg --keyserver $s --recv-key $k >> /dev/null 2>&1 && echo "[$FUNCNAME] ... imported gpg key $k from $s" && continue 2
              done
              echo "[$FUNCNAME] ERROR: Cannot download a required gpg pub key: $k"
              exit 3
           done
       }
